esphome:
  name: sensor-station
  platform: ESP32
  board: esp32-c3-devkitm-1 # Closest board profile for ESP32-C3 SuperMini

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true

# Enable logging for troubleshooting
logger:
  level: INFO

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

# Enable OTA updates
ota:

# Set deep sleep mode for power efficiency
deep_sleep:
  run_duration: 10s # Enough time to take measurements and send
  sleep_duration: 5min # Adjust sleep duration as needed
  prevent_deep_sleep:
    - wake_hold_switch # Prevent deep sleep (for OTA updates)

# I2C bus configuration (GPIO4=SDA, GPIO5=SCL)
i2c:
  sda: GPIO4
  scl: GPIO5
  scan: true

# Configure sensors
sensor:
  # ADC for TEMT6000 ambient light sensor
  - platform: adc
    pin: GPIO0
    name: "Ambient Light"
    update_interval: 5s

  # AHT20 temperature and humidity sensor
  - platform: aht10
    temperature:
      name: "Ambient Temperature"
    humidity:
      name: "Ambient Humidity"
    update_interval: 5s

  # BMP280 atmospheric pressure sensor
  - platform: bmp280
    temperature:
      name: "BMP280 Temperature" # Secondary temp reading
    pressure:
      name: "Atmospheric Pressure"
    address: 0x76 # Verify sensor address
    update_interval: 5s

  # TMP102 internal enclosure temperature sensor
  - platform: tmp102
    name: "Enclosure Internal Temp"
    address: 0x48 # Verify sensor address
    update_interval: 5s

  # DS18B20 pond water temperature sensor
  - platform: dallas
    address: 0x0000000000000000 # Replace with real sensor address
    name: "Pond Water Temperature"
    update_interval: 5s

  # INA219 voltage/current sensors
  # Solar Power Supply
  - platform: ina219
    address: 0x40
    shunt_resistance: 0.1 ohm
    current:
      name: "Solar Current"
      id: solar_current
    power:
      name: "Solar Power"
      id: solar_power
    bus_voltage:
      name: "Solar Voltage"
      id: solar_voltage
    update_interval: 5s

    # Battery Power Supply/Charging
  - platform: ina219
    address: 0x41
    shunt_resistance: 0.1 ohm
    current:
      name: "Battery Current"
    voltage:
      name: "Battery Voltage"
    power:
      name: "Battery Power"
    update_interval: 5s

  # PMS5003 Particulate Matter Sensor
  - platform: pmsx003
    type: PMSX003
    pm_1_0:
      name: "PM1.0"
    pm_2_5:
      name: "PM2.5"
    pm_10_0:
      name: "PM10.0"
    update_interval: 5min

  # HC-SR04 Ultrasonic Distance sensor
  - platform: ultrasonic
    trigger_pin: GPIO10
    echo_pin: GPIO3
    name: "Water Level Distance"
    id: water_distance
    update_interval: 5s

  # Calculate actual water level
  - platform: template
    name: "Actual Water Level"
    lambda: |-
      const float sensor_height = 100.0;  // Set this to the distance from the sensor to water level at zero (in cm)
      return sensor_height - id(water_distance).state;
    unit_of_measurement: "cm"
    update_interval: 5s

    # Template to calculate battery charge percentage
  - platform: template
    name: "Battery Percentage"
    id: batt_percent
    unit_of_measurement: "%"
    device_class: battery
    update_interval: 5s
    accuracy_decimals: 0
    lambda: |-
      float v = id(batt_voltage).state;
      if (v >= 4.2) return 100;
      if (v <= 3.2) return 0;
      return (v - 3.2) * 100.0 / (4.2 - 3.2);

  # Template to calculate System Power
  - platform: template
    name: "Estimated Total Power Use"
    id: total_power_use
    unit_of_measurement: "W"
    accuracy_decimals: 2
    update_interval: 5s
    lambda: |-
      return (id(solar_voltage).state * id(solar_current).state) -
             (id(batt_voltage).state * id(batt_current).state);

  # Daily total energy usage (resets every day)
  - platform: total_daily_energy
    name: "Total Energy Used Today"
    power_id: total_power_use
    unit_of_measurement: "Wh"
    accuracy_decimals: 2
    restore: true

  # Lifetime total energy usage (never resets)
  - platform: integration
    name: "Total Energy Used (All-Time)"
    sensor: total_power_use
    time_unit: h
    unit_of_measurement: "Wh"
    accuracy_decimals: 2
    restore: true

  # Daily solar charge (resets every day)
  - platform: total_daily_energy
    name: "Solar Energy Collected Today"
    power_id: solar_power
    unit_of_measurement: "Wh"
    accuracy_decimals: 2
    restore: true

  # Lifetime solar charge (never resets)
  - platform: integration
    name: "Solar Energy Collected (All-Time)"
    sensor: solar_power
    time_unit: h
    unit_of_measurement: "Wh"
    accuracy_decimals: 2
    restore: true

  # WiFi signal strength/RSSI in dB
  - platform: wifi_signal
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  # WiFi signal strength in %
  - platform: copy
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    id: wifi_signal
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    device_class: ""

# Dallas 1-wire setup
dallas:
  - pin: GPIO6

# UART for PMS5003 air quality sensor
uart:
  rx_pin: GPIO21
  tx_pin: GPIO20
  baud_rate: 9600

# OLED display configuration
  # Virtual switch to enable wake-lock (for OTA updates)
  - platform: template
    name: "Wake-Lock"
    id: wake_hold_switch
    restore_mode: RESTORE_DEFAULT_OFF

font:
  - file: "fonts/Roboto-Regular.ttf"
    id: roboto
    size: 12

# Display powered via GPIO7 through MOSFET
output:
  - platform: gpio
    pin: GPIO7
    id: oled_power

button:
  - platform: gpio
    pin:
      number: GPIO9
      inverted: true
    name: "OLED Activate Button"
    on_press:
      - output.turn_on: oled_power
      - delay: 10s # Display timeout
      - output.turn_off: oled_power

# Heater (PTC) control via GPIO8 through MOSFET
switch:
  - platform: gpio
    pin: GPIO8
    name: "PTC Heater"
    id: ptc_heater

# Automatic heater activation based on internal temp
climate:
  - platform: thermostat
    name: "Enclosure Heater Control"
    sensor: "Enclosure Internal Temp"
    default_target_temperature_low: 2Â°C
    default_target_temperature_high: 5Â°C
    heat_action:
      - switch.turn_on: ptc_heater
    idle_action:
      - switch.turn_off: ptc_heater
